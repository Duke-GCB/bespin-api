# -*- coding: utf-8 -*-
# Generated by Django 1.10.1 on 2017-02-16 14:39


from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='DDSEndpoint',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True)),
                ('agent_key', models.CharField(max_length=32, unique=True)),
                ('api_root', models.URLField()),
            ],
        ),
        migrations.CreateModel(
            name='DDSJobInputFile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('project_id', models.CharField(max_length=255, null=True)),
                ('file_id', models.CharField(max_length=255, null=True)),
                ('destination_path', models.CharField(max_length=255, null=True)),
                ('index', models.IntegerField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name='DDSUserCredential',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('token', models.CharField(max_length=32, unique=True)),
                ('endpoint', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='data.DDSEndpoint')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Job',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='User specified name for this job.', max_length=255)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('state', models.CharField(choices=[('N', 'New'), ('S', 'Starting'), ('R', 'Running'), ('F', 'Finished'), ('E', 'Error'), ('c', 'Canceling'), ('C', 'Canceled'), ('r', 'Restarting')], default='N', help_text='High level state of the project', max_length=1)),
                ('step', models.CharField(choices=[('V', 'Create VM'), ('S', 'Staging In'), ('R', 'Running Workflow'), ('O', 'Store Job Output'), ('T', 'Terminate VM')], help_text='Job step (progress within Running state)', max_length=1, null=True)),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('vm_flavor', models.CharField(default='m1.small', help_text='Determines CPUs and RAM VM allocation used to run this job.', max_length=255)),
                ('vm_instance_name', models.CharField(blank=True, help_text='Name of the vm this job is/was running on.', max_length=255, null=True)),
                ('vm_project_name', models.CharField(help_text='Name of the cloud project where vm will be created.', max_length=255)),
                ('job_order', models.TextField(help_text='CWL input json for use with the workflow.', null=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='JobAnswer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('index', models.IntegerField(default=0, help_text='Used to order array answers', null=True)),
                ('kind', models.CharField(choices=[('string', 'Text'), ('dds_file', 'DukeDS File'), ('dds_output_directory', 'DukeDS Output Directory')], help_text='Determines child table associated with this answer.', max_length=30)),
            ],
        ),
        migrations.CreateModel(
            name='JobAnswerSet',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('answers', models.ManyToManyField(help_text='User editable answers tied to this answer set', to='data.JobAnswer')),
            ],
        ),
        migrations.CreateModel(
            name='JobDDSFileAnswer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('project_id', models.CharField(help_text='uuid from DukeDS for the project containing our file', max_length=255, null=True)),
                ('file_id', models.CharField(help_text='uuid from DukeDS for the file chosen as this answer', max_length=255, null=True)),
                ('answer', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='dds_file', to='data.JobAnswer')),
                ('dds_user_credentials', models.ForeignKey(help_text='Credentials with access to this file', on_delete=django.db.models.deletion.CASCADE, to='data.DDSUserCredential')),
            ],
        ),
        migrations.CreateModel(
            name='JobDDSOutputDirectoryAnswer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('project_id', models.CharField(help_text='uuid from DukeDS for the project containing our directory', max_length=255, null=True)),
                ('directory_name', models.CharField(help_text='name of the directory to create', max_length=255, null=True)),
                ('answer', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='dds_output_directory', to='data.JobAnswer')),
                ('dds_user_credentials', models.ForeignKey(help_text='Credentials with access to this directory', on_delete=django.db.models.deletion.CASCADE, to='data.DDSUserCredential')),
            ],
        ),
        migrations.CreateModel(
            name='JobError',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.TextField()),
                ('job_step', models.CharField(choices=[('V', 'Create VM'), ('S', 'Staging In'), ('R', 'Running Workflow'), ('O', 'Store Job Output'), ('T', 'Terminate VM')], max_length=1)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('job', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='job_errors', to='data.Job')),
            ],
        ),
        migrations.CreateModel(
            name='JobInputFile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file_type', models.CharField(choices=[('dds_file', 'DukeDS File'), ('dds_file_array', 'DukeDS File Array'), ('url_file', 'URL File'), ('url_file_array', 'URL File Array')], max_length=30)),
                ('workflow_name', models.CharField(max_length=255, null=True)),
                ('job', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='input_files', to='data.Job')),
            ],
        ),
        migrations.CreateModel(
            name='JobOutputDir',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dir_name', models.CharField(max_length=255, null=True)),
                ('project_id', models.CharField(max_length=255, null=True)),
                ('dds_user_credentials', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='data.DDSUserCredential')),
                ('job', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='output_dir', to='data.Job')),
            ],
        ),
        migrations.CreateModel(
            name='JobQuestion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('key', models.CharField(help_text='Name to be used in CWL workflow.', max_length=255)),
                ('name', models.CharField(help_text='User facing question text.', max_length=255)),
                ('data_type', models.CharField(choices=[('string', 'String'), ('int', 'Integer'), ('File', 'File'), ('Directory', 'Directory')], help_text='Determines how answer is formatted in CWL input json.', max_length=30)),
                ('occurs', models.IntegerField(default=1, help_text='If > 1 this is an array in the CWL input json')),
            ],
        ),
        migrations.CreateModel(
            name='JobQuestionnaire',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Short user facing name', max_length=255)),
                ('description', models.TextField(help_text='Detailed user facing description')),
                ('questions', models.ManyToManyField(help_text='Questions that are required to create a job', to='data.JobQuestion')),
            ],
        ),
        migrations.CreateModel(
            name='JobStringAnswer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.CharField(max_length=255)),
                ('answer', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='string_value', to='data.JobAnswer')),
            ],
        ),
        migrations.CreateModel(
            name='LandoConnection',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('host', models.CharField(max_length=255)),
                ('username', models.CharField(max_length=255)),
                ('password', models.CharField(max_length=255)),
                ('queue_name', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='URLJobInputFile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('url', models.TextField(null=True)),
                ('destination_path', models.CharField(max_length=255, null=True)),
                ('index', models.IntegerField(null=True)),
                ('job_input_file', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='url_files', to='data.JobInputFile')),
            ],
        ),
        migrations.CreateModel(
            name='Workflow',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='WorkflowVersion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.TextField()),
                ('object_name', models.CharField(default='#main', help_text="Name of the object in a packed workflow to run. Typically set to '#main'.", max_length=255, null=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('version', models.IntegerField()),
                ('url', models.URLField(help_text='URL to packed CWL workflow file.')),
                ('workflow', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='versions', to='data.Workflow')),
            ],
        ),
        migrations.AddField(
            model_name='jobquestionnaire',
            name='workflow_version',
            field=models.ForeignKey(help_text='Workflow that this questionaire is for', on_delete=django.db.models.deletion.CASCADE, to='data.WorkflowVersion'),
        ),
        migrations.AddField(
            model_name='jobanswerset',
            name='questionnaire',
            field=models.ForeignKey(help_text='determines which questions are appropriate for this answer set', on_delete=django.db.models.deletion.CASCADE, to='data.JobQuestionnaire'),
        ),
        migrations.AddField(
            model_name='jobanswerset',
            name='user',
            field=models.ForeignKey(help_text='User who owns this answer set', on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='jobanswer',
            name='question',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='answers', to='data.JobQuestion'),
        ),
        migrations.AddField(
            model_name='jobanswer',
            name='questionnaire',
            field=models.ForeignKey(blank=True, help_text='When null this is a user editable answer otherwise it is a system answer', null=True, on_delete=django.db.models.deletion.CASCADE, to='data.JobQuestionnaire'),
        ),
        migrations.AddField(
            model_name='jobanswer',
            name='user',
            field=models.ForeignKey(help_text='User who created this job answer.', on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='job',
            name='workflow_version',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='data.WorkflowVersion'),
        ),
        migrations.AddField(
            model_name='ddsjobinputfile',
            name='dds_user_credentials',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='data.DDSUserCredential'),
        ),
        migrations.AddField(
            model_name='ddsjobinputfile',
            name='job_input_file',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='dds_files', to='data.JobInputFile'),
        ),
        migrations.AlterUniqueTogether(
            name='ddsusercredential',
            unique_together=set([('endpoint', 'user')]),
        ),
    ]
